// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from example.djinni

#include "NJSNodeInterface.hpp"

using namespace v8;
using namespace node;
using namespace std;


int32_t NJSNodeInterface::getNodeVersion(const std::string & version)
{
    //Wrap parameters
    auto arg_0 = Nan::New<String>(version).ToLocalChecked();

    Handle<Value> args[1] = {arg_0};
    Local<Object> local_njs_impl = Nan::New<Object>(njs_impl);
    if(!local_njs_impl->IsObject())
    {
        Nan::ThrowError("NJSNodeInterface::getNodeVersion fail to retrieve node implementation");
    }
    auto calling_funtion = Nan::Get(local_njs_impl,Nan::New<String>("getNodeVersion").ToLocalChecked()).ToLocalChecked();
    auto handle = this->handle();
    auto result = Nan::CallAsFunction(calling_funtion->ToObject(),handle,1,args);
    if(result.IsEmpty())
    {
        Nan::ThrowError("NJSNodeInterface::getNodeVersion call failed");
    }
    auto checkedResult = result.ToLocalChecked();
    auto arg_2 = Nan::To<int32_t>(checkedResult).FromJust();
    return arg_2;
}
NAN_METHOD(NJSNodeInterface::New) {

    //Only new allowed
    if(!info.IsConstructCall())
    {
        return Nan::ThrowError("NJSNodeInterface function can only be called as constructor (use New)");
    }

    NJSNodeInterface *node_instance = nullptr;
    if(info[0]->IsObject())
    {
        node_instance = new NJSNodeInterface(info[0]->ToObject());
    }
    else
    {
        return Nan::ThrowError("NJSNodeInterface::New requires an implementation from node");
    }

    if(node_instance)
    {
        //Wrap and return node instance
        node_instance->Wrap(info.This());
        info.GetReturnValue().Set(info.This());
    }
}

void NJSNodeInterface::Initialize(Local<Object> target) {

    Nan::HandleScope scope;

    Local<FunctionTemplate> func_template = Nan::New<FunctionTemplate>(NJSNodeInterface::New);
    Local<ObjectTemplate> objectTemplate = func_template->InstanceTemplate();
    objectTemplate->SetInternalFieldCount(1);

    func_template->SetClassName(Nan::New<String>("NJSNodeInterface").ToLocalChecked());

    //Add template to target
    target->Set(Nan::New<String>("NJSNodeInterface").ToLocalChecked(), func_template->GetFunction());
}
