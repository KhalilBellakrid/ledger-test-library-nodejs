// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from thread.djinni

#ifndef DJINNI_GENERATED_NJSITFTHREADDISPATCHER_HPP
#define DJINNI_GENERATED_NJSITFTHREADDISPATCHER_HPP


#include "../../src/interface/execution_context.hpp"
#include "../../src/interface/lock.hpp"
#include "NJSItfExecutionContext.hpp"
#include "NJSItfLock.hpp"
#include <memory>
#include <string>

#include <nan.h>
#include <node.h>
#include "../../src/interface/thread_dispatcher.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledgerapp_gen;

class NJSItfThreadDispatcher: public Nan::ObjectWrap, public ledgerapp_gen::ThreadDispatcher {
public:

    static void Initialize(Local<Object> target);
    ~NJSItfThreadDispatcher() {njs_impl.Reset();};
    NJSItfThreadDispatcher(Local<Object> njs_implementation){njs_impl.Reset(njs_implementation);};

    std::shared_ptr<ExecutionContext> getSerialExecutionContext(const std::string & name);

    std::shared_ptr<ExecutionContext> getThreadPoolExecutionContext(const std::string & name);

    std::shared_ptr<ExecutionContext> getMainExecutionContext();

    std::shared_ptr<Lock> newLock();

private:




    static NAN_METHOD(New);

    static NAN_METHOD(addRef);
    static NAN_METHOD(removeRef);

    Nan::Persistent <Object> njs_impl;
};
#endif //DJINNI_GENERATED_NJSITFTHREADDISPATCHER_HPP
